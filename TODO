- Clarify provenance of 1279067_1_Paired_sequences.fasta and its licence.
  Give appropriate credit. See https://opig.stats.ox.ac.uk/webapps/oas/

- Check airr from CRAN.

- How do we address the auxiliary data mess? See 'auxiliary_data' argument
  in '?igblastn'.

- Try online IgBLAST here https://www.ncbi.nlm.nih.gov/igblast/ and compare
  results with igblastr.

- Check support for Macaque.

- Figure out a way to automatically stamp AIRR germline dbs with a
  version number that allows to go back in time when needed.

- One should be able to pass the name of a IMGT germline db to
  install_IMGT_germline_db(), or a vector of names.

- Improve outfmt7-utils.Rd man page (e.g. document customized format 7
  and list_outfmt7_specifiers()) as well as associated unit tests (in
  tests/testthat/test-outfmt7-utils.R).

- igblastn() only supports 'ig_seqtype="Ig"' (the default) at the moment.
  Do we also want to suport 'ig_seqtype="TCR"'? What would it take to properly
  support this option? As a starter it seems that the user would need to be
  able to supply germline and constant dbs based on TCR sequences instead
  of Ig sequences, like the germline sequences provided here:
    https://www.imgt.org/download/V-QUEST/IMGT_V-QUEST_reference_directory/Homo_sapiens/TR/
  and the constant sequences provided here (see last table on the page,
  i.e. bottom-right table):
    https://www.imgt.org/vquest/refseqh.html#constant-sets
  What else would it take to properly support 'ig_seqtype="TCR"'?

- Make 'num_threads' an explicit argument with default to 4. The doc should
  show how to specify a higher but still reasonable custom value based on
  detectCores().

- Parse $footer part of output format 7.

- Implement parsing of output formats 3 and 4?

- Set environment variable IGDATA to point to the internal_data directory.
  Note that IGDATA must be set to the **parent** directory of the internal_data
  directory.

- Add 'loci' argument to install_IMGT_germline_db(). Set to "IGH+IGK+IGL"
  by default but could also be any subset of the 3 loci e.g. "IGH" or
  "IGK+IGL" etc...

- Great resource for how to use AIRR Community Reference germline sets with
  IgBLAST: https://williamdlees.github.io/receptor_utils/_build/html/airrc_sets_with_igblast.html
  In particular, the author seems to be using an OGRDB REST API version 2:
    https://ogrdb.airr-community.org/api_v2
  but where is this API documented?
  All the download utilities implemented in igblastr/R/AIRR-utils.R use
  the OGRDB REST API at
    https://ogrdb.airr-community.org/api
  which is poorly documented and is somewhat confusing (see below).

- Investigate the following mysteries about the germline sets provided
  by OGRDB:

  1. The OGRDB API at https://ogrdb.airr-community.org/api/ allows downloading
     the germline sequences in 2 formats: ungapped or ungapped_ex.
     Which format is appropriate to use with IgBLAST?
     Note that downloading germline sets directly by clicking on
     the "FASTA Ungapped" links here
       https://ogrdb.airr-community.org/germline_sets/Homo%20sapiens
     or
       https://ogrdb.airr-community.org/germline_sets/Mus%20musculus
     seems to retrieve the "ungapped_ex" sequences for Human and the "ungapped"
     sequences for Mouse. Confusing!

  2. For some Mouse strains, OGRDB seems to provide germline sequences
     only for a limited number of loci/groups. For example for strain A/J,
     only sequences from the light chain (i.e. groups IGKV, IGKJ, IGLV,
     and IGLJ) seem to be available.
     See https://ogrdb.airr-community.org/germline_sets/Mus%20musculus

- Implement install_AIRR_germline_db(). Will download the germline sequences
  from https://ogrdb.airr-community.org/ (link provided by Kellie).

- Add vignette.

- Update README.md.

